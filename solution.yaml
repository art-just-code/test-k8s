apiVersion: apps/v1
kind: Deployment
metadata:
    name: fault-tolerant-app

spec:
    # Поскольку 4 пода справляются с пиковой нагрузкой, то для обеспечения отказоустойчивости добавим еще 1 под, итого 5 подов
    replicas: 5
    selector:
        matchLabels:
            app: fault-tolerant-app

    template:
        metadata:
            labels:
                app: fault-tolerant-app

        spec:
            # Обеспечивает равномерное распределение подов по зонам
            topologySpreadConstraints:
                # Разница в 1 под между зонами
                - maxSkew: 1
                  # Используем зоны в качестве топологических доменов
                  topologyKey: topology.kubernetes.io/zone
                  # Не планировать под, если ограничение не соблюдается
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                      matchLabels:
                          app: fault-tolerant-app

            # Обеспечивает распределение подов по разным нодам
            affinity:
                # podAntiAffinity для распределения подов по разным нодам
                podAntiAffinity:
                    # preferredDuringScheduling - предпочтение, а не жесткое требование
                    # IgnoredDuringExecution - не перемещать под, если условия изменились
                    preferredDuringSchedulingIgnoredDuringExecution:
                        # Вес применения правила, где 100% - применять всегда
                        - weight: 100
                          podAffinityTerm:
                              labelSelector:
                                  matchLabels:
                                      app: fault-tolerant-app
                              # Применяем на уровне нод кластера
                              topologyKey: "kubernetes.io/hostname"

            # приложение, запросы и лимиты ресурсы, пробы
            containers:
                - name: fault-tolerant-app
                  image: app-image:tag
                  # распределение ресурсов исходя из требований
                  resources:
                      requests:
                          cpu: 100m
                          memory: 128Mi
                      limits:
                          cpu: 250m
                          memory: 192Mi
                  # приложению требуется 5-10 секунд для инициализации, readinessProbe настроена с учетом этого времени
                  readinessProbe:
                      httpGet:
                          path: /healthcheck
                          port: 8080
                      initialDelaySeconds: 10
                      periodSeconds: 5
                  # проверка рабоспособности пода
                  livenessProbe:
                      httpGet:
                          path: /healthcheck
                          port: 8080
                      # Возможно, потребуется уточнить эти параметры
                      initialDelaySeconds: 15
                      periodSeconds: 10

    strategy:
        # RollingUpdate для плавного обновления без простоев
        type: RollingUpdate
        rollingUpdate:
            # 1 дополнительный под для раскатки обновления
            maxSurge: 1
            # 0 недоступных подов во время обновления для отказоустойчивости
            maxUnavailable: 0

---
# масштабирование при увеличении дневной нагрузки
apiVersion: autoscaling/v2beta1
# учитывая дневной цикл нагрузки, HorizontalPodAutoscaler для автоматического масштабирования
kind: HorizontalPodAutoscaler
metadata:
    name: fault-tolerant-app-hpa
spec:
    scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: fault-tolerant-app
    # соответствует числу реплик в основном deployment
    minReplicas: 5
    # значение maxReplicas требует уточнения, исходя из максимальной фактической нагрузки
    maxReplicas: 10
    metrics:
        - type: Resource
          resource:
              name: cpu
              # требует уточнения, исходя из скорости роста нагрузки и агрессивности масштабирования
              targetAverageUtilization: 80
